/*
 * generated by Xtext 2.20.0
 */
grammar InternalMealyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hu.bme.mit.mealymodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.mealymodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.mealymodel.services.MealyDslGrammarAccess;

}

@parser::members {

 	private MealyDslGrammarAccess grammarAccess;

    public InternalMealyDslParser(TokenStream input, MealyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MealyMachine";
   	}

   	@Override
   	protected MealyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMealyMachine
entryRuleMealyMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMealyMachineRule()); }
	iv_ruleMealyMachine=ruleMealyMachine
	{ $current=$iv_ruleMealyMachine.current; }
	EOF;

// Rule MealyMachine
ruleMealyMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MealyMachine'
		{
			newLeafNode(otherlv_0, grammarAccess.getMealyMachineAccess().getMealyMachineKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMealyMachineAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='initialState'
		{
			newLeafNode(otherlv_2, grammarAccess.getMealyMachineAccess().getInitialStateKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMealyMachineAccess().getInitialStateStateParserRuleCall_3_0());
				}
				lv_initialState_3_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
					}
					set(
						$current,
						"initialState",
						lv_initialState_3_0,
						"hu.bme.mit.mealymodel.MealyDsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='states'
		{
			newLeafNode(otherlv_4, grammarAccess.getMealyMachineAccess().getStatesKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getMealyMachineAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMealyMachineAccess().getStatesStateParserRuleCall_6_0());
				}
				lv_states_6_0=ruleState
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
					}
					add(
						$current,
						"states",
						lv_states_6_0,
						"hu.bme.mit.mealymodel.MealyDsl.State");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getMealyMachineAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMealyMachineAccess().getStatesStateParserRuleCall_7_1_0());
					}
					lv_states_8_0=ruleState
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
						}
						add(
							$current,
							"states",
							lv_states_8_0,
							"hu.bme.mit.mealymodel.MealyDsl.State");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getMealyMachineAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_10='inputAlphabet'
		{
			newLeafNode(otherlv_10, grammarAccess.getMealyMachineAccess().getInputAlphabetKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMealyMachineAccess().getInputAlphabetAlphabetParserRuleCall_10_0());
				}
				lv_inputAlphabet_11_0=ruleAlphabet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
					}
					set(
						$current,
						"inputAlphabet",
						lv_inputAlphabet_11_0,
						"hu.bme.mit.mealymodel.MealyDsl.Alphabet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='outputAlphabet'
		{
			newLeafNode(otherlv_12, grammarAccess.getMealyMachineAccess().getOutputAlphabetKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMealyMachineAccess().getOutputAlphabetAlphabetParserRuleCall_12_0());
				}
				lv_outputAlphabet_13_0=ruleAlphabet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
					}
					set(
						$current,
						"outputAlphabet",
						lv_outputAlphabet_13_0,
						"hu.bme.mit.mealymodel.MealyDsl.Alphabet");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_14='transitions'
		{
			newLeafNode(otherlv_14, grammarAccess.getMealyMachineAccess().getTransitionsKeyword_13());
		}
		otherlv_15='{'
		{
			newLeafNode(otherlv_15, grammarAccess.getMealyMachineAccess().getLeftCurlyBracketKeyword_14());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMealyMachineAccess().getTransitionsTransitionParserRuleCall_15_0());
				}
				lv_transitions_16_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_16_0,
						"hu.bme.mit.mealymodel.MealyDsl.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getMealyMachineAccess().getCommaKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMealyMachineAccess().getTransitionsTransitionParserRuleCall_16_1_0());
					}
					lv_transitions_18_0=ruleTransition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMealyMachineRule());
						}
						add(
							$current,
							"transitions",
							lv_transitions_18_0,
							"hu.bme.mit.mealymodel.MealyDsl.Transition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getMealyMachineAccess().getRightCurlyBracketKeyword_17());
		}
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getMealyMachineAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStateAccess().getStateAction_0(),
					$current);
			}
		)
		otherlv_1='State'
		{
			newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"hu.bme.mit.mealymodel.MealyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlphabet
entryRuleAlphabet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlphabetRule()); }
	iv_ruleAlphabet=ruleAlphabet
	{ $current=$iv_ruleAlphabet.current; }
	EOF;

// Rule Alphabet
ruleAlphabet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Alphabet'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlphabetAccess().getAlphabetKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlphabetAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='characters'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlphabetAccess().getCharactersKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getAlphabetAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlphabetAccess().getCharactersEStringParserRuleCall_4_0());
				}
				lv_characters_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlphabetRule());
					}
					add(
						$current,
						"characters",
						lv_characters_4_0,
						"hu.bme.mit.mealymodel.MealyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getAlphabetAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlphabetAccess().getCharactersEStringParserRuleCall_5_1_0());
					}
					lv_characters_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlphabetRule());
						}
						add(
							$current,
							"characters",
							lv_characters_6_0,
							"hu.bme.mit.mealymodel.MealyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getAlphabetAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getAlphabetAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='input'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getInputKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getInputEStringParserRuleCall_3_0());
				}
				lv_input_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"input",
						lv_input_3_0,
						"hu.bme.mit.mealymodel.MealyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='output'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getOutputKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getOutputEStringParserRuleCall_5_0());
				}
				lv_output_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTransitionRule());
					}
					set(
						$current,
						"output",
						lv_output_5_0,
						"hu.bme.mit.mealymodel.MealyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='sourceState'
		{
			newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getSourceStateKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getSourceStateStateCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='targetState'
		{
			newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getTargetStateKeyword_8());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_9_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
